#FIXME - Remove this
zephyr_compile_options(
	-Wno-sign-compare
	-Wno-shift-negative-value
	)

# The QLIP sources are not to be released and a scheme to link a pre-built
# library generated is needed. To achieve this all the source code that is not
# intended to be released is placed under a folder named 'restricted'. To ensure
# the source-less package released builds, the object output generated by
# building these restricted sources are also pushed to the repository. Due to
# driver sharing setup between Zephyr and MPOS SDK and each SDK having its own
# unique build system, the qlip library needs to be generated for each SDK
#
# The steps below document the process of generating these libaries from the
# sources. The pre-built libraries should be updated each time a source code
# change is made to qlip source code.
#
# For MPOS SDK
# ============
# Build the SDK as you would usually (At this point the restricted folder will
# exist and the qlip code would be built from sources)
# cd <root>/build/drivers/broadcom/pka/qlip/restricted
# export PATH=/projects/ccxsw/toolchains/gcc-arm-none-eabi-6-2017-q1-update/bin:$PATH
# arm-none-eabi-ar rcs qlip.a *.o
# mv qlip.a <root>/drivers/broadcom/pka/qlip/
#
# For Zephyr SDK (v1.9)
# ==============
# Build the SDK as you would usually (At this point the restricted folder will
# exist and the qlip code would be built from sources)
# cd <build_path>/outdir/<board>/drivers/broadcom/pka/qlip/restricted
# export PATH=/projects/ccxsw/toolchains/gcc-arm-none-eabi-6-2017-q1-update/bin:$PATH
# arm-none-eabi-ld -nostartfiles -nodefaultlibs -nostdlib -static -r -o qlip.o *.o
# mv qlip.o <root>/drivers/broadcom/pka/qlip/
#
# For Zephyr SDK (v1.14)
# ==============
# Build the SDK as you would usually (At this point the restricted folder will
# exist and the qlip code would be built from sources)
# cd <build_path>/zephyr/drivers/broadcom/pka/CMakeFiles/drivers__broadcom__pka.dir/qlip/restricted/
# export PATH=/projects/ccxsw/toolchains/gcc-arm-none-eabi-6-2017-q1-update/bin:$PATH
# arm-none-eabi-ld -nostartfiles -nodefaultlibs -nostdlib -static -r -o qlip_z_v_1_14.o *.obj
# mv qlip_z_v_1_14.o <root>/drivers/broadcom/pka/qlip/

set(QLIP_LIB_PATH ${CMAKE_CURRENT_SOURCE_DIR}/qlip)

set(QLIP_SRC_PATH qlip/restricted)

# Set QLIP source dir
set(QLIP_SRC_DIR ${ZEPHYR_BASE}/drivers/broadcom/pka/${QLIP_SRC_PATH})

zephyr_library()
zephyr_library_include_directories(${ZEPHYR_BASE}/include/broadcom/drivers)
zephyr_library_include_directories(${ZEPHYR_BASE}/boards/arm/${BOARD})

# If qlip/restricted folder exists with sources, set QLIP_SRC=y else QLIP_LIB=y
IF(EXISTS "${QLIP_SRC_DIR}")
zephyr_library_sources(
	${QLIP_SRC_PATH}/q_addsub.c
	${QLIP_SRC_PATH}/q_dh.c
	${QLIP_SRC_PATH}/q_div.c
	${QLIP_SRC_PATH}/q_dsa.c
	${QLIP_SRC_PATH}/q_ecdsa.c
	${QLIP_SRC_PATH}/q_ecp.c
	${QLIP_SRC_PATH}/q_elgamal.c
	${QLIP_SRC_PATH}/q_fdivrem.c
	${QLIP_SRC_PATH}/q_inv.c
	${QLIP_SRC_PATH}/q_lip_aux.c
	${QLIP_SRC_PATH}/q_lip_utils.c
	${QLIP_SRC_PATH}/q_lir_rd_wr.c
	${QLIP_SRC_PATH}/q_mod.c
	${QLIP_SRC_PATH}/q_modexp.c
	${QLIP_SRC_PATH}/q_mulsqr.c
	${QLIP_SRC_PATH}/q_pka_hw.c
	${QLIP_SRC_PATH}/q_pke_hw.c
	${QLIP_SRC_PATH}/q_ppsel.c
	${QLIP_SRC_PATH}/q_rsa_4k.c
	${QLIP_SRC_PATH}/q_rsa.c
	)
ELSE()
# For Zephyr the qlip pre-built library needs to be copied to the output folder
add_custom_command(
	TARGET ${ZEPHYR_CURRENT_LIBRARY}
	POST_BUILD
	COMMAND cp -f ${QLIP_LIB_PATH}/qlip_z_v_1_14.o ${CMAKE_BINARY_DIR}/zephyr/libqlip.a
	)
zephyr_link_libraries(qlip)
ENDIF()

zephyr_library_sources(
	crypto_pka.c
	crypto_pka_util.c
	crypto_pka_selftest.c
	crypto_pka_ushx.c
	)

