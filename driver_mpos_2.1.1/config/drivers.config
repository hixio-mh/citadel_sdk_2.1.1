#
# Copyright Broadcom corporation (2018)
#

##################################
## Driver specific Config flags ##
##################################
CONFIG_BRCM_DRIVER_ADC ?= y
CONFIG_BRCM_DRIVER_BBL ?= y
CONFIG_BRCM_DRIVER_CRYPTO ?= y
CONFIG_BRCM_DRIVER_DMA ?= y
CONFIG_BRCM_DRIVER_DMU ?= y
CONFIG_BRCM_DRIVER_FT ?= y
CONFIG_BRCM_DRIVER_GPIO ?= y
CONFIG_BRCM_DRIVER_I2C ?= y
# GPIO usage conflicts between
# keypad and LCD (8080 mode) driver
# If keypad driver needs to be enabled
# please disable SMC and LCD drivers
#CONFIG_BRCM_DRIVER_KEYPAD ?= y
CONFIG_BRCM_DRIVER_LCD ?= y
CONFIG_BRCM_DRIVER_MSR ?= y
CONFIG_BRCM_DRIVER_PM ?= y
CONFIG_BRCM_DRIVER_PWM ?= y
CONFIG_BRCM_DRIVER_QSPI ?= y
CONFIG_BRCM_DRIVER_RTC ?= y
CONFIG_BRCM_DRIVER_SCC ?= y
CONFIG_BRCM_DRIVER_SPI ?= y
CONFIG_BRCM_DRIVER_SPL ?= y
CONFIG_BRCM_DRIVER_UART_NS16550 ?= y
CONFIG_BRCM_DRIVER_SDIO ?= y
CONFIG_BRCM_DRIVER_SMAU ?= y
CONFIG_BRCM_DRIVER_SMC ?= y
CONFIG_BRCM_DRIVER_SOTP ?= y
CONFIG_BRCM_DRIVER_TIMERS ?= y
CONFIG_BRCM_DRIVER_UNICAM ?= y
#CONFIG_BRCM_DRIVER_USB ?= y
#CONFIG_BRCM_DRIVER_USBD ?= y
CONFIG_BRCM_DRIVER_WDT ?= y

####################################
## Driver specific Internal flags ##
####################################
# QSPI driver flags
ifeq ($(CONFIG_BRCM_DRIVER_QSPI), y)
CFLAGS += -DCONFIG_USE_BSPI_FOR_READ -DCONFIG_USE_WSPI_FOR_WRITE
CFLAGS += -DCONFIG_USE_CPU_MEMCPY_FOR_WRITE
CFLAGS += -DCONFIG_ENABLE_CACHE_INVAL_ON_WRITE
CFLAGS += -DCONFIG_QSPI_QUAD_IO_ENABLED
CFLAGS += -DCONFIG_SECONDARY_FLASH
endif

# Unicam flags
ifeq ($(CONFIG_BRCM_DRIVER_UNICAM), y)
# If unicam driver is enabled, then the following 2 make variables need be set
# 1. Enable the define for the camera module installed on the board
CFLAGS += -DCONFIG_LI_V024M_CAMERA
# 2. Choose what interface is used to connect the camera module to the board
#    CSI/CCP/CPI
UNICAM_INTERFACE = CSI
# Set cflags
CONFIG_UNICAM_PHYS_INTERFACE_$(UNICAM_INTERFACE)=y
endif

# Uart driver flags
ifeq ($(CONFIG_BRCM_DRIVER_UART_NS16550), y)
CFLAGS += -DCONFIG_UART_NS16550 -DCONFIG_UART_NS16550_PORT_0 -DCONFIG_UART_NS16550_32BIT_ONLY
CFLAGS += -DCONFIG_PRINTK -DCONFIG_SYS_LOG -DCONFIG_SYS_LOG_SHOW_TAGS
CFLAGS += -DCONFIG_EARLY_CONSOLE
CFLAGS += -DCONFIG_UART_INTERRUPT_DRIVEN
CFLAGS += -DCONFIG_UART_CONSOLE
CFLAGS += -DCONFIG_CONSOLE_HANDLER
CFLAGS += -DCONFIG_UART_DRV_CMD
CFLAGS += -DCONFIG_UART_LINE_CTRL
# To enable interactive tests
CFLAGS += -DCONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS
# Console input max length - This is needed by all sources including console.h
CFLAGS += -DCONFIG_CONSOLE_INPUT_MAX_LINE_LEN=128
endif

# SPI driver flags
ifeq ($(CONFIG_BRCM_DRIVER_SPI), y)
export CONFIG_SPI_LEGACY_API ?= 1
export CONFIG_SPI1_ENABLE ?= y
export CONFIG_SPI2_ENABLE ?= y
export CONFIG_SPI3_ENABLE ?= y
export CONFIG_SPI5_ENABLE ?= y
endif

# LCD Driver flags
# By default, LCD SPI mode is off.
# Make CONFIG_LCD_SPI_MODE = y to enable LCD in SPI mode
ifeq ($(CONFIG_BRCM_DRIVER_LCD), y)
export CONFIG_LCD_SPI_MODE ?= n 
CFLAGS += -DCONFIG_SPI1_USES_MFIO_6_TO_9
CFLAGS += -DCONFIG_SPI2_USES_MFIO_10_TO_13
CFLAGS += -DCONFIG_SPI3_USES_MFIO_14_TO_17
CFLAGS += -DCONFIG_SPI4_USES_MFIO_18_TO_21
endif

# Uart flags needed for SCC automated tests
ifeq ($(CONFIG_BRCM_DRIVER_SCC), y)
CFLAGS += -DCONFIG_UART_NS16550_LINE_CTRL
endif

# SMAU flags
ifeq ($(CONFIG_BRCM_DRIVER_SMAU),y)
CFLAGS += -DCONFIG_MIN_SMAU_WINDOW_SIZE=0x100000
endif

# Allow pinmux override at run time
export CONFIG_ALLOW_IOMUX_OVERRIDE ?= y

###############################################
## Misc extra driver specific configurations ##
###############################################
CONFIG_DMA_IRQ_PRI = 0x0
CONFIG_SEC_FLASH_CLOCK_FREQUENCY = 25000000
CONFIG_SYS_CLOCK_TICKS_PER_SEC = 1000
CONFIG_UART_NS16550_PORT_0_BAUD_RATE = 115200
CONFIG_UART_NS16550_PORT_0_OPTIONS = 0x0
CONFIG_UART_NS16550_PORT_0_NAME = \"UART_0\"
CONFIG_UART_NS16550_PORT_0_IRQ_PRI = 0x0
CONFIG_INTERRUPT_INIT_PRIORITY = 3
CONFIG_UART_INIT_PRIORITY = 4
CONFIG_UART_CONSOLE_INIT_PRIORITY = 5
CONFIG_SYSTEM_CLOCK_INIT_PRIORITY = 0
