#FIXME - Remove this
ifneq ($(MPOS_BASE),)
CFLAGS += -Wno-sign-compare -Wno-shift-negative-value 
else
ccflags-y += -Wno-sign-compare -Wno-shift-negative-value
endif

# The QLIP sources are not to be released and a scheme to link a pre-built
# library generated is needed. To achieve this all the source code that is not
# intended to be released is placed under a folder named 'restricted'. To ensure
# the source-less package released builds, the object output generated by
# building these restricted sources are also pushed to the repository. Due to
# driver sharing setup between Zephyr and MPOS SDK and each SDK having its own
# unique build system, the qlip library needs to be generated for each SDK
#
# The steps below document the process of generating these libaries from the
# sources. The pre-built libraries should be updated each time a source code
# change is made to qlip source code.
#
# For MPOS SDK
# ============
# Build the SDK as you would usually (At this point the restricted folderwill
# exist and the qlip code would be built from sources)
# cd <root>/build/drivers/broadcom/pka/qlip/restricted
# arm-none-eabi-ar rcs qlip.a *.o
# mv qlip.a <root>/drivers/broadcom/pka/qlip/
#
# For Zephyr SDK
# ==============
# Build the SDK as you would usually (At this point the restricted folderwill
# exist and the qlip code would be built from sources)
# cd <build_path>/outdir/<board>/drivers/broadcom/pka/qlip/restricted
# arm-none-eabi-ld -nostartfiles -nodefaultlibs -nostdlib -static -r -o qlip.o *.o
# mv qlip.o <root>/drivers/broadcom/pka/qlip/

QLIP_SRC_PATH = qlip/restricted

# Set QLIP source dir and library name
ifneq ($(MPOS_BASE),)
QLIP_SRC_DIR = $(QLIP_SRC_PATH)
QLIP_LIB_FILE = qlip.a
else
QLIP_SRC_DIR = $(ZEPHYR_BASE)/drivers/broadcom/pka/$(QLIP_SRC_PATH)
QLIP_LIB_FILE = qlip.o
endif

# If qlip/restricted folder exists with sources, set QLIP_SRC=y else QLIP_LIB=y
ifneq ($(wildcard $(QLIP_SRC_DIR)/*),)
QLIP_SRC = y
else
QLIP_LIB = y
# For Zephyr the qlip pre-built library needs to be copied to the output folder
ifeq ($(MPOS_BASE),)
$(shell mkdir -p drivers/broadcom/pka/qlip/)
$(shell cp -f $(ZEPHYR_BASE)/drivers/broadcom/pka/qlip/qlip.o drivers/broadcom/pka/qlip/)
endif
endif

obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_addsub.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_dh.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_div.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_dsa.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_ecdsa.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_ecp.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_elgamal.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_fdivrem.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_inv.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_lip_aux.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_lip_utils.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_lir_rd_wr.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_mod.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_modexp.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_mulsqr.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_pka_hw.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_pke_hw.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_ppsel.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_rsa_4k.o
obj-$(QLIP_SRC) += $(QLIP_SRC_PATH)/q_rsa.o
obj-$(QLIP_LIB) += qlip/$(QLIP_LIB_FILE)

obj-y += crypto_pka.o
obj-y += crypto_pka_util.o
obj-y += crypto_pka_selftest.o
obj-y += crypto_pka_ushx.o

-include $(MPOS_BASE)/Makefile.inc
